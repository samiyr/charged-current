#ifndef DECAY_PARAMETRIZATION_H
#define DECAY_PARAMETRIZATION_H

#include "Utility/Math.cpp"
#include "Utility/Utility.cpp"

struct DecayParametrization {
	constexpr static DecayParametrization fit1() noexcept {
		return DecayParametrization(7.365, 1.4, 2.276, 2.04);
	}
	constexpr static DecayParametrization fit2() noexcept {
		return DecayParametrization(4.62698, 1.17383, 2.0603, 2.0565);
	}

	constexpr static std::vector<DecayParametrization> fit_set_1() noexcept {
		const std::vector<std::vector<double>> parameter_set = {
			{3.1574, 1.00882, 1.79948, 2.1012}, 
			{1.803, 0.758678, 1.46523, 2.16098}, 
			{3.05683, 0.987698, 1.77821, 2.10643}, 
			{3.16044, 1.0206, 1.74559, 2.11656}, 
			{1.64303, 0.705827, 1.41228, 2.17788}, 
			{1.9307, 0.783589, 1.54651, 2.13936}, 
			{2.85803, 0.983224, 1.65294, 2.14176}, 
			{1.73514, 0.743179, 1.45465, 2.16267}, 
			{1.21312, 0.575815, 1.28026, 2.19342}, 
			{1.75951, 0.744026, 1.44536, 2.17578}, 
			{2.22753, 0.869517, 1.55729, 2.14007}, 
			{2.0537, 0.804131, 1.571, 2.14704}, 
			{1.86077, 0.777836, 1.46878, 2.16702}, 
			{2.06275, 0.802764, 1.60876, 2.12216}, 
			{1.77395, 0.759094, 1.43997, 2.16639}, 
			{1.96807, 0.785812, 1.56468, 2.13624}, 
			{1.75254, 0.756242, 1.40893, 2.17974}, 
			{1.89706, 0.775801, 1.55412, 2.12749}, 
			{2.81889, 0.960668, 1.68168, 2.13852}, 
			{3.99878, 1.10784, 1.90634, 2.0983}, 
			{3.03244, 0.986336, 1.73084, 2.12856}, 
			{2.01608, 0.797885, 1.55574, 2.14485}, 
			{2.41207, 0.88469, 1.629, 2.13299}, 
			{4.15932, 1.09377, 2.03717, 2.05403}, 
			{2.15932, 0.83527, 1.60339, 2.12681}, 
			{1.59046, 0.685929, 1.43862, 2.16101}, 
			{2.63459, 0.913187, 1.69538, 2.13105}, 
			{1.93729, 0.76908, 1.60665, 2.11653}, 
			{3.00333, 0.978444, 1.77756, 2.10746}, 
			{1.28198, 0.600327, 1.33459, 2.17025}, 
			{1.48808, 0.650908, 1.43917, 2.15556}, 
			{1.48879, 0.683145, 1.33819, 2.19067}
		};

		std::vector<DecayParametrization> parametrizations;

		for (const std::vector<double> &parameters : parameter_set) {
			parametrizations.emplace_back(parameters[0], parameters[1], parameters[2], parameters[3]);
		}

		return parametrizations;
	}

	constexpr static std::vector<DecayParametrization> fit_set_2() noexcept {
		const std::vector<std::vector<double>> parameter_set = {
			{3.1574, 1.00882, 1.79948, 2.1012}, 
			{3.07576, 1.02638, 1.74798, 2.11383}, 
			{2.54113, 0.936304, 1.63737, 2.13631}, 
			{1.0386, 0.542595, 1.08303, 2.27391}, 
			{4.20699, 1.19115, 1.85436, 2.10769}, 
			{1.803, 0.758678, 1.46523, 2.16098}, 
			{2.72208, 0.964081, 1.62738, 2.14866}, 
			{3.61806, 1.05921, 1.8941, 2.09702}, 
			{3.05683, 0.987698, 1.77821, 2.10643}, 
			{10.3367, 1.56872, 2.36517, 2.05472}, 
			{2.56533, 0.928418, 1.67742, 2.1217}, 
			{3.03278, 0.985015, 1.74641, 2.12905}, 
			{4.25313, 1.18616, 1.90587, 2.08895}, 
			{3.82398, 1.09931, 1.9188, 2.08299}, 
			{1.89016, 0.785375, 1.51874, 2.14245}, 
			{2.50781, 0.908571, 1.68437, 2.10984}, 
			{3.16044, 1.0206, 1.74559, 2.11656}, 
			{1.64303, 0.705827, 1.41228, 2.17788}, 
			{3.69603, 1.07971, 1.83525, 2.11902}, 
			{3.52272, 1.09474, 1.72827, 2.14633}, 
			{1.9307, 0.783589, 1.54651, 2.13936}, 
			{3.50045, 1.05626, 1.85125, 2.09623}, 
			{2.85803, 0.983224, 1.65294, 2.14176}, 
			{1.42663, 0.71244, 1.19887, 2.25869}, 
			{2.83028, 0.97036, 1.69943, 2.12252}, 
			{5.93622, 1.31219, 2.12798, 2.07129}, 
			{1.73514, 0.743179, 1.45465, 2.16267}, 
			{1.21312, 0.575815, 1.28026, 2.19342}, 
			{1.75951, 0.744026, 1.44536, 2.17578}, 
			{5.59857, 1.25693, 2.10396, 2.07666}, 
			{3.32668, 1.06547, 1.74665, 2.12398}, 
			{2.92166, 1.02359, 1.61524, 2.15762}, 
			{1.3088, 0.631033, 1.31413, 2.17917}, 
			{2.1602, 0.869177, 1.50692, 2.15879}, 
			{2.22753, 0.869517, 1.55729, 2.14007}, 
			{2.0537, 0.804131, 1.571, 2.14704}, 
			{1.86077, 0.777836, 1.46878, 2.16702}, 
			{3.6644, 1.13835, 1.71288, 2.14101}, 
			{2.06275, 0.802764, 1.60876, 2.12216}, 
			{2.28634, 0.914966, 1.47948, 2.17763}, 
			{1.77395, 0.759094, 1.43997, 2.16639}, 
			{1.96807, 0.785812, 1.56468, 2.13624}, 
			{4.06694, 1.11782, 1.93025, 2.08897}, 
			{1.75254, 0.756242, 1.40893, 2.17974}, 
			{2.84027, 0.962101, 1.78031, 2.10718}, 
			{1.89706, 0.775801, 1.55412, 2.12749}, 
			{1.41133, 0.670872, 1.33047, 2.19069}, 
			{2.2928, 0.874635, 1.6266, 2.12883}, 
			{2.15809, 0.848184, 1.62658, 2.11003}, 
			{3.73692, 1.0703, 1.95346, 2.07796}, 
			{2.54217, 0.923261, 1.66335, 2.1182}, 
			{2.27035, 0.832599, 1.72348, 2.09761}, 
			{2.64698, 0.964369, 1.64179, 2.13966}, 
			{1.91427, 0.782397, 1.56327, 2.12826}, 
			{5.65548, 1.3063, 2.00135, 2.10254}, 
			{2.80219, 0.977109, 1.67217, 2.13282}, 
			{1.88483, 0.821251, 1.43294, 2.16908}, 
			{2.02656, 0.834088, 1.49442, 2.16088}, 
			{6.73093, 1.3244, 2.36845, 2.0171}, 
			{1.85999, 0.778688, 1.47066, 2.16967}, 
			{3.04916, 0.99596, 1.7936, 2.1006}, 
			{2.81889, 0.960668, 1.68168, 2.13852}, 
			{8.30365, 1.44324, 2.40958, 2.02126}, 
			{3.61267, 1.08981, 1.79811, 2.11038}, 
			{5.23848, 1.28329, 1.92564, 2.11298}, 
			{3.99878, 1.10784, 1.90634, 2.0983}, 
			{3.47242, 1.04226, 1.89173, 2.08493}, 
			{3.07373, 1.03027, 1.6512, 2.15444}, 
			{3.26041, 1.03511, 1.82786, 2.10391}, 
			{2.36553, 0.892241, 1.57276, 2.15955}, 
			{1.67665, 0.752456, 1.38522, 2.18614}, 
			{2.26561, 0.89964, 1.54047, 2.15606}, 
			{4.19855, 1.13882, 1.92412, 2.09769}, 
			{3.03244, 0.986336, 1.73084, 2.12856}, 
			{2.01608, 0.797885, 1.55574, 2.14485}, 
			{2.41207, 0.88469, 1.629, 2.13299}, 
			{2.17082, 0.866531, 1.54076, 2.15107}, 
			{1.98093, 0.828669, 1.55758, 2.12236}, 
			{4.15932, 1.09377, 2.03717, 2.05403}, 
			{3.56101, 1.08207, 1.79135, 2.11674}, 
			{2.15932, 0.83527, 1.60339, 2.12681}, 
			{5.58472, 1.27216, 2.17481, 2.0445}, 
			{3.59811, 1.08841, 1.80449, 2.11814}, 
			{5.50098, 1.32499, 1.94755, 2.11348}, 
			{2.20423, 0.851369, 1.5965, 2.14174}, 
			{1.59046, 0.685929, 1.43862, 2.16101}, 
			{2.63459, 0.913187, 1.69538, 2.13105}, 
			{6.30791, 1.30474, 2.2484, 2.03838}, 
			{4.12849, 1.17204, 1.83067, 2.1151}, 
			{1.93729, 0.76908, 1.60665, 2.11653}, 
			{3.52568, 1.06688, 1.86092, 2.096}, 
			{3.00333, 0.978444, 1.77756, 2.10746}, 
			{1.28198, 0.600327, 1.33459, 2.17025}, 
			{2.3831, 0.893214, 1.60446, 2.147}, 
			{2.22827, 0.855024, 1.59242, 2.14086}, 
			{1.48808, 0.650908, 1.43917, 2.15556}, 
			{2.18965, 0.854914, 1.56208, 2.1458}, 
			{1.48879, 0.683145, 1.33819, 2.19067}, 
			{5.72121, 1.25121, 2.23303, 2.03069}, 
			{3.69178, 1.10894, 1.86033, 2.10123}, 
			{3.9568, 1.10731, 1.92402, 2.09508}
		};

		std::vector<DecayParametrization> parametrizations;

		for (const std::vector<double> &parameters : parameter_set) {
			parametrizations.emplace_back(parameters[0], parameters[1], parameters[2], parameters[3]);
		}

		return parametrizations;
	}

	double N;
	double alpha;
	double beta;
	double gamma;

	double beta_term_1p_alpha_beta;
	double beta_term_2p_alpha_beta;

	double gamma_prefactor_term;

	constexpr DecayParametrization() noexcept
	: N(0.0), alpha(0.0), beta(0.0), gamma(0.0), 
	beta_term_1p_alpha_beta(0.0), beta_term_2p_alpha_beta(0.0), gamma_prefactor_term(0.0) {}

	constexpr DecayParametrization(
		const double _N,
		const double _alpha,
		const double _beta,
		const double _gamma
	) noexcept
	: N(_N),
	alpha(_alpha),
	beta(_beta),
	gamma(_gamma),
	beta_term_1p_alpha_beta(Math::beta(1 + alpha, 1 + beta)),
	beta_term_2p_alpha_beta(Math::beta(2 + alpha, 1 + beta)),
	gamma_prefactor_term(std::pow(gamma, -1 - alpha))
	{ }

};


#endif