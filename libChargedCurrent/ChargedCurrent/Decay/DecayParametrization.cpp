#ifndef DECAY_PARAMETRIZATION_H
#define DECAY_PARAMETRIZATION_H

#include "Utility/Math.cpp"
#include "Utility/Utility.cpp"

struct DecayParametrization {
	constexpr static DecayParametrization fit1() noexcept {
		return DecayParametrization(3.1574, 1.00882, 1.79948, 2.1012);
	}
	constexpr static DecayParametrization fit2() noexcept {
		return DecayParametrization(7.365, 1.4, 2.276, 2.04);
	}

	constexpr static std::vector<DecayParametrization> fit_set_1() noexcept {
		const std::vector<std::vector<double>> parameter_set = {
			{3.1574, 1.00882, 1.79948, 2.1012}, 
			{1.0852, 0.522549, 1.2748, 2.16643}, 
			{2.99367, 0.990715, 1.7187, 2.1248}, 
			{2.27886, 0.858437, 1.63605, 2.12405}, 
			{2.01257, 0.808877, 1.52716, 2.15508}, 
			{3.67072, 1.0876, 1.79766, 2.12218}, 
			{2.2159, 0.850715, 1.59706, 2.1352}, 
			{1.47918, 0.695579, 1.31615, 2.1905}, 
			{1.40373, 0.614203, 1.40683, 2.16624},
			{1.75786, 0.735873, 1.46332, 2.16339}, 
			{2.42844, 0.882453, 1.64343, 2.13974}, 
			{2.2414, 0.820832, 1.65875, 2.12311}, 
			{2.80787, 0.944272, 1.76284, 2.09367}, 
			{2.20082, 0.816352, 1.72669, 2.0847}, 
			{2.23345, 0.835243, 1.63034, 2.12873}, 
			{1.91023, 0.760071, 1.59017, 2.12779}, 
			{1.40097, 0.646527, 1.36797, 2.17189}, 
			{4.03962, 1.10974, 1.99722, 2.055}, 
			{3.31209, 1.03005, 1.7951, 2.10459}, 
			{3.0577, 0.995663, 1.75082, 2.11586}, 
			{1.6773, 0.729657, 1.42702, 2.17119}, 
			{1.91028, 0.753372, 1.62664, 2.10887}, 
			{4.77146, 1.14158, 2.09896, 2.06351}, 
			{3.26849, 1.03133, 1.77903, 2.10798}, 
			{3.39915, 1.02117, 1.86321, 2.09542}, 
			{2.19529, 0.802467, 1.68457, 2.11803}, 
			{2.58173, 0.925979, 1.68291, 2.10991}, 
			{2.02873, 0.788068, 1.62485, 2.11086}, 
			{1.37372, 0.631282, 1.33972, 2.18393}, 
			{1.31275, 0.614161, 1.31491, 2.19367}, 
			{1.55543, 0.687687, 1.42167, 2.1585}
		};

		std::vector<DecayParametrization> parametrizations;

		for (const std::vector<double> &parameters : parameter_set) {
			parametrizations.emplace_back(parameters[0], parameters[1], parameters[2], parameters[3]);
		}

		return parametrizations;
	}

	constexpr static std::vector<DecayParametrization> fit_set_2() noexcept {
		const std::vector<std::vector<double>> parameter_set = {
			{3.1574, 1.00882, 1.79948, 2.1012}, 
			{3.74331, 1.09564, 1.86571, 2.09676}, 
			{1.75362, 0.726757, 1.52309, 2.14312}, 
			{1.70545, 0.738959, 1.42823, 2.16847}, 
			{1.3182, 0.620801, 1.2853, 2.19745}, 
			{3.36087, 1.03892, 1.86266, 2.08902}, 
			{3.91863, 1.10028, 1.91145, 2.09615}, 
			{1.83727, 0.761498, 1.53056, 2.14285}, 
			{2.05715, 0.810314, 1.61141, 2.12249}, 
			{2.47936, 0.881724, 1.7066, 2.11219}, 
			{2.23254, 0.863187, 1.58721, 2.14126}, 
			{1.8297, 0.77265, 1.41263, 2.19573}, 
			{2.58339, 0.936175, 1.66147, 2.12457}, 
			{2.0836, 0.863185, 1.44137, 2.18807}, 
			{2.35467, 0.866441, 1.6876, 2.10544}, 
			{0.860502, 0.424842, 1.02071, 2.29071}, 
			{3.8822, 1.10648, 1.9417, 2.07152}, 
			{3.04734, 0.996381, 1.71923, 2.12696}, 
			{4.4568, 1.19932, 1.92331, 2.10618}, 
			{1.85753, 0.787908, 1.45047, 2.16843}, 
			{2.86038, 0.938158, 1.8137, 2.09204}, 
			{6.03848, 1.32499, 2.14404, 2.06105}, 
			{1.21365, 0.537383, 1.35656, 2.17465}, 
			{2.333, 0.895201, 1.59601, 2.12666}, 
			{2.34758, 0.877585, 1.65023, 2.12143}, 
			{4.08599, 1.15672, 1.84725, 2.11355}, 
			{3.25639, 1.01466, 1.85446, 2.08897}, 
			{1.33516, 0.628823, 1.29621, 2.19018}, 
			{2.7111, 0.949754, 1.6512, 2.14458}, 
			{4.98269, 1.21467, 2.06849, 2.06784}, 
			{3.60883, 1.06823, 1.90357, 2.07327}
		};

		std::vector<DecayParametrization> parametrizations;

		for (const std::vector<double> &parameters : parameter_set) {
			parametrizations.emplace_back(parameters[0], parameters[1], parameters[2], parameters[3]);
		}

		return parametrizations;
	}

	constexpr static std::vector<DecayParametrization> fit_set_3() noexcept {
		const std::vector<std::vector<double>> parameter_set = {{3.1574, 1.00882, 1.79948, 2.1012}, {3.74331, 1.09564, 1.86571, 2.09676}, {1.75362, 0.726757, 1.52309, 2.14312}, {1.70545, 0.738959, 1.42823, 2.16847}, {1.3182, 0.620801, 1.2853, 2.19745}, {3.36087, 1.03892, 1.86266, 2.08902}, {3.91863, 1.10028, 1.91145, 2.09615}, {1.83727, 0.761498, 1.53056, 2.14285}, {2.05715, 0.810314, 1.61141, 2.12249}, {2.47936, 0.881724, 1.7066, 2.11219}, {2.23254, 0.863187, 1.58721, 2.14126}, {1.8297, 0.77265, 1.41263, 2.19573}, {2.58339, 0.936175, 1.66147, 2.12457}, {2.0836, 0.863185, 1.44137, 2.18807}, {2.35467, 0.866441, 1.6876, 2.10544}, {0.860502, 0.424842, 1.02071, 2.29071}, {3.8822, 1.10648, 1.9417, 2.07152}, {3.04734, 0.996381, 1.71923, 2.12696}, {4.4568, 1.19932, 1.92331, 2.10618}, {1.85753, 0.787908, 1.45047, 2.16843}, {2.86038, 0.938158, 1.8137, 2.09204}, {6.03848, 1.32499, 2.14404, 2.06105}, {1.21365, 0.537383, 1.35656, 2.17465}, {2.333, 0.895201, 1.59601, 2.12666}, {2.34758, 0.877585, 1.65023, 2.12143}, {4.08599, 1.15672, 1.84725, 2.11355}, {3.25639, 1.01466, 1.85446, 2.08897}, {1.33516, 0.628823, 1.29621, 2.19018}, {2.7111, 0.949754, 1.6512, 2.14458}, {4.98269, 1.21467, 2.06849, 2.06784}, {3.60883, 1.06823, 1.90357, 2.07327}, {1.56423, 0.716766, 1.3669, 2.17965}, {2.11644, 0.810378, 1.58299, 2.16014}, {1.0852, 0.522549, 1.2748, 2.16643}, {1.94546, 0.8495, 1.36041, 2.22408}, {2.99367, 0.990715, 1.7187, 2.1248}, {2.27886, 0.858437, 1.63605, 2.12405}, {2.01257, 0.808877, 1.52716, 2.15508}, {2.15855, 0.865172, 1.55332, 2.14559}, {3.67072, 1.0876, 1.79766, 2.12218}, {5.65632, 1.30785, 2.04639, 2.07643}, {2.2159, 0.850715, 1.59706, 2.1352}, {3.43234, 1.07264, 1.77044, 2.11316}, {1.97704, 0.827614, 1.44217, 2.17917}, {1.77515, 0.749029, 1.53025, 2.14323}, {1.47918, 0.695579, 1.31615, 2.1905}, {1.40373, 0.614203, 1.40683, 2.16624}, {1.75786, 0.735873, 1.46332, 2.16339}, {2.23627, 0.888329, 1.50586, 2.17407}, {1.63566, 0.717406, 1.46911, 2.14284}, {2.135, 0.859164, 1.53873, 2.15548}, {4.95909, 1.21071, 2.03296, 2.08924}, {2.51081, 0.911621, 1.67608, 2.12735}, {3.39214, 1.0521, 1.77904, 2.12442}, {4.33504, 1.17302, 1.94191, 2.08713}, {2.42844, 0.882453, 1.64343, 2.13974}, {2.34745, 0.908201, 1.49808, 2.1858}, {2.2414, 0.820832, 1.65875, 2.12311}, {2.11217, 0.831955, 1.57115, 2.13865}, {1.62444, 0.716756, 1.4253, 2.17995}, {2.80787, 0.944272, 1.76284, 2.09367}, {2.20082, 0.816352, 1.72669, 2.0847}, {3.7847, 1.05938, 2.01552, 2.05351}, {4.39397, 1.20571, 1.88857, 2.095}, {1.95155, 0.778785, 1.59974, 2.12508}, {4.40068, 1.15741, 1.94658, 2.09971}, {1.94641, 0.791926, 1.56577, 2.13097}, {5.68878, 1.27026, 2.17768, 2.04187}, {5.39422, 1.2651, 2.04643, 2.08378}, {3.05855, 1.01758, 1.73815, 2.1206}, {4.68787, 1.20857, 1.92026, 2.10526}, {5.16528, 1.24795, 2.06194, 2.06817}, {3.6704, 1.08712, 1.83847, 2.10567}, {5.98757, 1.28655, 2.13112, 2.07237}, {1.79116, 0.728117, 1.51516, 2.14864}, {2.47438, 0.924822, 1.66385, 2.11414}, {1.8857, 0.803842, 1.42676, 2.19258}, {2.25216, 0.914337, 1.49585, 2.16681}, {2.63854, 0.961916, 1.61339, 2.15366}, {2.96529, 0.964788, 1.84247, 2.08625}, {2.23345, 0.835243, 1.63034, 2.12873}, {2.82085, 0.979538, 1.71027, 2.11789}, {3.96698, 1.10799, 1.93371, 2.08572}, {1.86383, 0.752124, 1.59949, 2.11825}, {2.94211, 0.972434, 1.78724, 2.10783}, {5.81157, 1.3021, 2.07593, 2.07424}, {2.69742, 0.95233, 1.68283, 2.12644}, {1.91023, 0.760071, 1.59017, 2.12779}, {3.13121, 0.999519, 1.78669, 2.11274}, {5.38054, 1.25623, 2.04056, 2.08488}, {2.00027, 0.826911, 1.50432, 2.15642}, {4.48645, 1.168, 1.97829, 2.08695}, {4.99851, 1.25628, 1.95533, 2.10136}, {4.01274, 1.13293, 1.84889, 2.12271}, {3.44323, 1.06944, 1.79174, 2.11944}, {3.19682, 1.04426, 1.71942, 2.13604}, {1.40097, 0.646527, 1.36797, 2.17189}, {5.18712, 1.26571, 2.01246, 2.08139}, {4.03962, 1.10974, 1.99722, 2.055}, {2.45088, 0.913184, 1.60779, 2.13622}, {2.29476, 0.887578, 1.60597, 2.12807}, {4.31432, 1.19554, 1.89384, 2.09917}, {3.31209, 1.03005, 1.7951, 2.10459}, {3.50025, 1.0842, 1.75898, 2.12076}, {3.31657, 1.04909, 1.75706, 2.12337}, {2.10599, 0.841384, 1.58685, 2.13258}, {4.74092, 1.20763, 2.01437, 2.06827}, {2.2011, 0.86849, 1.55869, 2.14665}, {2.56548, 0.951142, 1.62485, 2.1444}, {3.0577, 0.995663, 1.75082, 2.11586}, {2.78956, 0.969077, 1.64333, 2.1511}, {1.6773, 0.729657, 1.42702, 2.17119}, {5.98662, 1.29625, 2.18593, 2.04369}, {1.91028, 0.753372, 1.62664, 2.10887}, {4.45182, 1.19067, 1.91566, 2.09761}, {3.50742, 1.0693, 1.78891, 2.12393}, {2.43311, 0.90594, 1.62095, 2.1449}, {4.82834, 1.2062, 2.04931, 2.06288}, {1.80116, 0.777727, 1.44739, 2.17414}, {4.77146, 1.14158, 2.09896, 2.06351}, {3.26849, 1.03133, 1.77903, 2.10798}, {3.34465, 1.05086, 1.80586, 2.1119}, {4.77471, 1.21027, 1.93218, 2.11443}, {3.66257, 1.10746, 1.77368, 2.13003}, {3.5164, 1.06156, 1.84285, 2.11054}, {3.43934, 1.05234, 1.83873, 2.09979}, {5.10735, 1.23168, 2.07012, 2.07201}, {4.78035, 1.18564, 2.08212, 2.06197}, {2.14917, 0.858436, 1.59854, 2.12659}, {3.84505, 1.11366, 1.94417, 2.07129}, {3.49978, 1.07411, 1.75985, 2.12935}, {5.72603, 1.28479, 2.10394, 2.06258}, {2.63887, 0.962081, 1.65388, 2.13149}, {3.39915, 1.02117, 1.86321, 2.09542}, {6.51339, 1.34227, 2.16958, 2.0595}, {3.63593, 1.10826, 1.81192, 2.11161}, {2.19529, 0.802467, 1.68457, 2.11803}, {3.38607, 1.05242, 1.79875, 2.1124}, {3.48034, 1.05917, 1.88756, 2.08186}, {2.58173, 0.925979, 1.68291, 2.10991}, {2.55181, 0.937331, 1.5964, 2.14695}, {3.66773, 1.09498, 1.86872, 2.09159}, {2.34313, 0.886205, 1.57151, 2.15532}, {3.13947, 0.99381, 1.83299, 2.10215}, {3.66773, 1.08924, 1.82443, 2.12157}, {2.88992, 0.970855, 1.72003, 2.13059}, {1.67935, 0.784781, 1.3346, 2.18598}, {4.11475, 1.16336, 1.83399, 2.11863}, {3.47014, 1.0686, 1.83892, 2.09707}, {3.38921, 1.05804, 1.77162, 2.12756}, {2.02873, 0.788068, 1.62485, 2.11086}, {2.75124, 0.955217, 1.7246, 2.12462}, {1.47613, 0.645618, 1.40303, 2.16711}, {3.15868, 1.02161, 1.7524, 2.12424}, {2.64127, 0.915146, 1.72534, 2.122}, {5.84076, 1.29051, 2.1402, 2.06541}, {1.37372, 0.631282, 1.33972, 2.18393}, {1.31275, 0.614161, 1.31491, 2.19367}, {5.667, 1.27127, 2.12877, 2.06521}, {4.61331, 1.21527, 1.88109, 2.11719}, {1.86483, 0.802441, 1.50241, 2.14263}, {3.08774, 1.02334, 1.73425, 2.1213}, {1.55543, 0.687687, 1.42167, 2.1585}, {3.62641, 1.0759, 1.84533, 2.10672}, {1.35105, 0.605871, 1.37476, 2.17586}, {2.01044, 0.831436, 1.45323, 2.18446}, {2.63175, 0.966513, 1.61468, 2.1393}, {4.27572, 1.17989, 1.90487, 2.11183}, {3.14113, 1.03477, 1.74182, 2.12774}, {2.67217, 0.925788, 1.69794, 2.12935}, {1.96068, 0.82225, 1.46648, 2.17427}, {2.51384, 0.890695, 1.70684, 2.11591}, {1.95296, 0.783814, 1.56614, 2.13277}, {1.9727, 0.840833, 1.43885, 2.16864}, {4.58505, 1.22686, 1.86106, 2.12197}, {3.52433, 1.05876, 1.843, 2.09954}, {4.77773, 1.23159, 1.91905, 2.11648}, {2.49519, 0.883421, 1.71581, 2.11086}, {3.18474, 1.02493, 1.81078, 2.09081}, {8.32151, 1.44519, 2.38491, 2.02756}, {4.06403, 1.14148, 1.89788, 2.08796}, {6.35089, 1.33094, 2.17136, 2.07505}, {2.79679, 0.964915, 1.72793, 2.11855}, {3.74865, 1.10174, 1.84719, 2.10582}, {5.87728, 1.29248, 2.10189, 2.06966}, {2.81249, 0.99272, 1.68772, 2.12188}, {4.74317, 1.18538, 2.03393, 2.07313}, {3.26575, 1.04665, 1.73506, 2.12759}, {2.7112, 0.963622, 1.64856, 2.13978}, {2.17511, 0.838135, 1.51696, 2.17893}, {2.97729, 0.98002, 1.77821, 2.1076}, {3.14305, 1.00699, 1.77914, 2.10695}, {3.36309, 1.02871, 1.81977, 2.1036}, {3.39969, 1.05604, 1.84921, 2.09112}, {1.29118, 0.586128, 1.29848, 2.20469}, {1.896, 0.833861, 1.41645, 2.17137}, {1.02375, 0.505794, 1.13817, 2.2447}, {4.03903, 1.1579, 1.80457, 2.13584}, {2.40753, 0.881372, 1.62934, 2.13832}, {2.87638, 0.975191, 1.73979, 2.11249}, {2.42748, 0.887776, 1.70838, 2.0892}};

		std::vector<DecayParametrization> parametrizations;

		for (const std::vector<double> &parameters : parameter_set) {
			parametrizations.emplace_back(parameters[0], parameters[1], parameters[2], parameters[3]);
		}

		return parametrizations;
	}

	double N;
	double alpha;
	double beta;
	double gamma;

	double beta_term_1p_alpha_beta;
	double beta_term_2p_alpha_beta;

	double gamma_prefactor_term;

	constexpr DecayParametrization() noexcept
	: N(0.0), alpha(0.0), beta(0.0), gamma(0.0), 
	beta_term_1p_alpha_beta(0.0), beta_term_2p_alpha_beta(0.0), gamma_prefactor_term(0.0) {}

	constexpr DecayParametrization(
		const double _N,
		const double _alpha,
		const double _beta,
		const double _gamma
	) noexcept
	: N(_N),
	alpha(_alpha),
	beta(_beta),
	gamma(_gamma),
	beta_term_1p_alpha_beta(Math::beta(1 + alpha, 1 + beta)),
	beta_term_2p_alpha_beta(Math::beta(2 + alpha, 1 + beta)),
	gamma_prefactor_term(std::pow(gamma, -1 - alpha))
	{ }

};


#endif